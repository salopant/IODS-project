source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
source('C:/Users/antti/asalo/Opinnot/Intro to open data science/IODS-project/data/create_learning2014.R', echo=TRUE)
getwd
list.files()
lrn2014 <- read.csv("./data/learn14.csv")
lrn2014 <- read.csv("./data/learn14.csv")
summary(lrn2014)
lrn2014 <- read.csv("./data/learn14.csv")
summary(lrn2014)
str(lrn2014)
head(lrn2014)
lrn2014 <- read.csv("./data/learn14.csv")
dim(lrn2014)
summary(lrn2014)
lrn2014 <- read.csv("./data/learn14.csv")
sz <- dim(lrn2014)
lrn2014 <- read.csv("./data/learn14.csv")
sz <- dim(lrn2014)
print("The total number of respondents is ", sz[1])
lrn2014 <- read.csv("./data/learn14.csv")
sz <- dim(lrn2014)
print("The total number of respondents is ", sz)
lrn2014 <- read.csv("./data/learn14.csv")
sz <- dim(lrn2014)
sz
lrn2014 <- read.csv("./data/learn14.csv")
sz <- dim(lrn2014)
sz[,1]
lrn2014 <- read.csv("./data/learn14.csv")
sz <- dim(lrn2014)
sz[1]
lrn2014 <- read.csv("./data/learn14.csv")
sz <- dim(lrn2014)
sz[2]
lrn2014 <- read.csv("./data/learn14.csv")
sz <- dim(lrn2014)
print("The total number of respondents is %d, %d female, %d male.", sz[1], length(lrn2014$gender == "F"), length(lrn2014$gender == "M"))
lrn2014 <- read.csv("./data/learn14.csv")
sz <- dim(lrn2014)
print("The total number of respondents is %f, %f female, %f male.", sz[1], length(lrn2014$gender == "F"), length(lrn2014$gender == "M"))
lrn2014 <- read.csv("./data/learn14.csv")
sz <- dim(lrn2014)
lrn2014 <- read.csv("./data/learn14.csv")
dim(lrn2014)
summary(lrn2014)
pairs(learning2014[3:5], col = lrn2014$gender, size=lrn2014$Points)
pairs(learning2014[3:5], col = lrn2014$gender)
pairs(learning2014[3:6], col = lrn2014$gender)
p <- pairs(learning2014[3:6], col = lrn2014$gender, main = "")
p <- pairs(learning2014[3:6], col = lrn2014$gender, main = "kjhsf")
p <- pairs(learning2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features", legend("Female", "Male"))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features", legend("bottomright", fill = unique(lrn2014$gender), legend = c(levels(lrn2014$gender))))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features")
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features", legend("bottomright",legend = c(levels(lrn2014$gender)))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features", legend("bottomright",legend = c(levels(lrn2014$gender))))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features", legend("bottomright"))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features", legend("bottomright", legend = c(lrn2014$gender)))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend(0, 1, as.vector(unique(lrn2014$gender)), fill=c("red", "black"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend(0, 1, as.vector(unique(lrn2014$gender)))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend(0, 1, as.vector(unique(lrn2014$gender)), fill=c("red", "black"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend(0, 1, as.vector(unique(lrn2014$gender)), fill=c("black", "red"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend("bottomright", as.vector(unique(lrn2014$gender)), fill=c("black", "red"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[2:7], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend("bottomright", as.vector(unique(lrn2014$gender)), fill=c("black", "red"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[2:7], col = lrn2014$gender, main = "Scatterplot between descriptive features")
#par(xpd=TRUE)
legend("bottomright", as.vector(unique(lrn2014$gender)), fill=c("black", "red"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[2:7], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend("bottomright", as.vector(unique(lrn2014$gender)), fill=c("black", "red"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[2:7], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend(0,0, as.vector(unique(lrn2014$gender)), fill=c("black", "red"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[2:7], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend(0,1, as.vector(unique(lrn2014$gender)), fill=c("black", "red"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[2:7], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend(0,1.2, as.vector(unique(lrn2014$gender)), fill=c("black", "red"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[2:7], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend(0,1.1, as.vector(unique(lrn2014$gender)), fill=c("black", "red"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
p <- pairs(lrn2014[3:6], col = lrn2014$gender, main = "Scatterplot between descriptive features")
par(xpd=TRUE)
legend(0,1.1, as.vector(unique(lrn2014$gender)), fill=c("black", "red"))
#legend("bottomright", fill = unique(iris$Species), legend = c( levels(iris$Species)))
par(mfrow=c(2,4))
hist(lrn2014$gender, main = "Gender", xlab = "Gender")
par(mfrow=c(2,4))
hist(lrn2014$gender, main = "Gender")
par(mfrow=c(2,4))
hist(lrn2014$Age ~ lrn2014$gender)
par(mfrow=c(2,4))
hist(lrn2014$Age)
par(mfrow=c(2,4))
hist(lrn2014$Age)
hist(lrn2014$Age[lrn2014$gender == "F"])
hist(lrn2014$Age[lrn2014$gender == "M"])
par(mfrow=c(4,2))
hist(lrn2014$Age, main = "Age", xlab = "Age in years", probability = TRUE)
hist(lrn2014$Age[lrn2014$gender == "F"])
hist(lrn2014$Age[lrn2014$gender == "M"])
par(mfrow=c(2,2))
hist(lrn2014$Age, main = "Age", xlab = "Age in years", probability = TRUE)
hist(lrn2014$Age[lrn2014$gender == "F"])
hist(lrn2014$Age[lrn2014$gender == "M"])
par(mfrow=c(2,2))
hist(lrn2014$Age, main = "Age", xlab = "Age in years", probability = TRUE)
hist(lrn2014$Attitude, main = "Attitude", xlab = "Attitude level", probability = TRUE)
hist(lrn2014$Age[lrn2014$gender == "F"])
hist(lrn2014$Age[lrn2014$gender == "M"])
par(mfrow=c(2,1))
hist(lrn2014$Age, main = "Age of respondents", xlab = "Age in years", probability = TRUE)
hist(lrn2014$Attitude, main = "Attitude", xlab = "Attitude level", probability = TRUE)
par(mfrow=c(2,1))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of respondents", xlab = "Age in years", probability = TRUE)
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of respondents", xlab = "Age in years", probability = TRUE)
par(mfrow=c(2,1))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", probability = TRUE)
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", probability = TRUE)
par(mfrow=c(2,1))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years")
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years")
#par(mfrow=c(2,1))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = "blue")
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = "red", add=TRUE)
#par(mfrow=c(2,1))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = "blue")
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = "red", add=TRUE, aplha=0.3)
#par(mfrow=c(2,1))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = "blue")
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = "red", add=TRUE, aplha=0.7)
#par(mfrow=c(2,1))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = "blue")
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = "red", add=TRUE, alpha=0.7)
#par(mfrow=c(2,1))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = "blue")
color_transparent <- adjustcolor("red", alpha.f = 0.3)
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = color_transparent, add=TRUE, )
#par(mfrow=c(2,1))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = "blue")
color_transparent <- adjustcolor("red", alpha.f = 0.7)
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = color_transparent, add=TRUE, )
#par(mfrow=c(2,1))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = "blue")
color_transparent <- adjustcolor("red", alpha.f = 0.5)
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = color_transparent, add=TRUE, )
#par(mfrow=c(2,1))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = "blue")
color_transparent <- adjustcolor("red", alpha.f = 0.5)
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = color_transparent, add=TRUE)
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
legend(0.8,1.1, as.vector(unique(lrn2014$gender)),  fill=c("black", "red"))
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
legend(0,1.1, as.vector(unique(lrn2014$gender)),  fill=c("black", "red"))
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
par(xpd=TRUE)
legend(0,1.1, as.vector(unique(lrn2014$gender)),  fill=c("black", "red"))
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
legend("topright", c("Germany", "Plastic"), col=c("blue", "red"), lwd=10)
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
legend("topright", c("Germany", "Plastic"), col=colors, lwd=10)
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
legend("topright", c("Female", "Male"), col=colors, lwd=10)
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
legend("topright", c("Female", "Male"), col=colors, lwd=5)
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
legend("topright", c("Female", "Male"), col=colors, lwd=5, wwd=5)
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
legend("topright", c("Female", "Male"), col=colors, lwd=5)
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
legend(1,1, c("Female", "Male"), col=colors, lwd=5)
#par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of female respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"], main = "Age of male respondents", xlab = "Age in years", col = colors[2], add=TRUE)
legend("center", c("Female", "Male"), col=colors, lwd=5)
par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"],col = colors[2], add=TRUE)
legend("center", c("Female", "Male"), col=colors, lwd=5)
hist(lrn2014$Attitude, main = "Attitude", xlab = "Attitude level", probability = TRUE)
par(mfrow=c(1,2))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"],col = colors[2], add=TRUE)
legend("center", c("Female", "Male"), col=colors, lwd=5)
hist(lrn2014$Attitude, main = "Attitude", xlab = "Attitude level", probability = TRUE)
par(mfrow=c(1,2))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"],col = colors[2], add=TRUE)
legend("center", c("Female", "Male"), col=colors, lwd=5)
hist(lrn2014$Attitude, main = "Attitude", xlab = "Attitude level", probability = TRUE, col = "green")
par(mfrow=c(1,2))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"],col = colors[2], add=TRUE)
legend("center", c("Female", "Male"), col=colors, lwd=5)
hist(lrn2014$Attitude, main = "Attitude", xlab = "Attitude level, all", probability = TRUE, col = "green")
library(GGally)
#library(GGally)
library(ggplot2)
install.packages(c("GGally", "ggplot2"))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
p <- ggpairs(lrn2014, mapping = aes(col = gender, size = attitude, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
p <- ggpairs(lrn2014, mapping = aes(col = gender, size = attitude, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
p <- ggpairs(lrn2014, mapping = aes(col = gender, size = attitude, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
p <- ggpairs(lrn2014, mapping = aes(col = gender, size = attitude, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
plot(p)
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
p <- ggpairs(lrn2014, mapping = aes(col = gender, size = attitude, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
#plot the fig
p
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
p <- ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
#plot the fig
p
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)), legend = as.vector(unique(lrn$gender)))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)), legend = as.vector(unique(lrn2014$gender)))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)), legend = unique(lrn2014$gender))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)), legend = C("Female", "Male"))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
gglegend("gender")
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20))upper = list(continuous = gglegend("gender"))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20))upper = list(continuous = gglegend("gender")))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)),upper = list(continuous = gglegend("gender")))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)),upper = list(continuous = gglegend("gender"))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)),upper = list(continuous = gglegend("gender")))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)),upper = list(continuous = gglegend(lrn2014$gender)))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
par(mfrow=c(1,2))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"],col = colors[2], add=TRUE)
legend("center", c("Female", "Male"), col=colors, lwd=5)
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Attitude[lrn2014$gender == "F"], main = "Attitude of respondents", xlab = "Attitude level", col = colors[1])
hist(lrn2014$Attitude[lrn2014$gender == "M"],col = colors[2], add=TRUE)
legend("center", c("Female", "Male"), col=colors, lwd=5)
par(mfrow=c(2,1))
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Age[lrn2014$gender == "F"], main = "Age of respondents", xlab = "Age in years", col = colors[1])
hist(lrn2014$Age[lrn2014$gender == "M"],col = colors[2], add=TRUE)
legend("center", c("Female", "Male"), col=colors, lwd=5)
colors <- c("blue", adjustcolor("red", alpha.f = 0.5))
hist(lrn2014$Attitude[lrn2014$gender == "F"], main = "Attitude of respondents", xlab = "Attitude level", col = colors[1])
hist(lrn2014$Attitude[lrn2014$gender == "M"],col = colors[2], add=TRUE)
legend("center", c("Female", "Male"), col=colors, lwd=5)
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3))
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = Age, alpha = 0.3))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3))
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(lrn2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
# create a more advanced plot matrix with ggpairs()
model <- lm(Points ~ deep + stra + surf, data = lrn2014)
summary(model)
model <- lm(Points ~ stra + surf, data = lrn2014)
summary(model)
# create linear regression model with three explanatory variables to explain Points
model <- lm(Points ~ Attitude + stra + surf, data = lrn2014)
summary(model)
# create linear regression model with three explanatory variables to explain Points
model <- lm(Points ~ Attitude, data = lrn2014)
summary(model)
# create linear regression model with three explanatory variables to explain Points
model <- lm(Points ~ Attitude + stra + surf, data = lrn2014)
summary(model)
model <- lm(Points ~ Attitude + stra, data = lrn2014)
summary(model)
model <- lm(Points ~ Attitude, data = lrn2014)
summary(model)
plot(model, which <- c(1, 2, 5))
par(mfrow = c(2,2))
plot(model, which <- c(1, 2, 5))
